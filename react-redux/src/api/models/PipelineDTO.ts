/* tslint:disable */
/* eslint-disable */
/**
 * Tutorial Management API
 * This API exposes endpoints to manage tutorials.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: myemail@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * DTO representing a pipeline with its properties and metadata.
 * @export
 * @interface PipelineDTO
 */
export interface PipelineDTO {
    /**
     * Unique identifier of the pipeline
     * @type {number}
     * @memberof PipelineDTO
     */
    id: number;
    /**
     * Name of the pipeline
     * @type {string}
     * @memberof PipelineDTO
     */
    name: string;
    /**
     * Original image data in byte array format
     * @type {number}
     * @memberof PipelineDTO
     */
    originalImage: number | null;
    /**
     * String representation of transformations applied to the image
     * @type {string}
     * @memberof PipelineDTO
     */
    transformations: string;
    /**
     * Visibility of the pipeline
     * @type {string}
     * @memberof PipelineDTO
     */
    visibility: PipelineDTOVisibilityEnum;
    /**
     * Username or ID of the pipeline owner
     * @type {string}
     * @memberof PipelineDTO
     */
    owner: string;
    /**
     * Description of the pipeline
     * @type {string}
     * @memberof PipelineDTO
     */
    description: string;
}


/**
 * @export
 */
export const PipelineDTOVisibilityEnum = {
    Private: 'PRIVATE',
    Group: 'GROUP',
    FriendOnly: 'FRIEND_ONLY',
    Public: 'PUBLIC'
} as const;
export type PipelineDTOVisibilityEnum = typeof PipelineDTOVisibilityEnum[keyof typeof PipelineDTOVisibilityEnum];


/**
 * Check if a given object implements the PipelineDTO interface.
 */
export function instanceOfPipelineDTO(value: object): value is PipelineDTO {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('originalImage' in value) || value['originalImage'] === undefined) return false;
    if (!('transformations' in value) || value['transformations'] === undefined) return false;
    if (!('visibility' in value) || value['visibility'] === undefined) return false;
    if (!('owner' in value) || value['owner'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    return true;
}

export function PipelineDTOFromJSON(json: any): PipelineDTO {
    return PipelineDTOFromJSONTyped(json, false);
}

export function PipelineDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PipelineDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'originalImage': json['originalImage'],
        'transformations': json['transformations'],
        'visibility': json['visibility'],
        'owner': json['owner'],
        'description': json['description'],
    };
}

export function PipelineDTOToJSON(json: any): PipelineDTO {
    return PipelineDTOToJSONTyped(json, false);
}

export function PipelineDTOToJSONTyped(value?: PipelineDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'originalImage': value['originalImage'],
        'transformations': value['transformations'],
        'visibility': value['visibility'],
        'owner': value['owner'],
        'description': value['description'],
    };
}

