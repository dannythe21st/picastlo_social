/* tslint:disable */
/* eslint-disable */
/**
 * Tutorial Management API
 * This API exposes endpoints to manage tutorials.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: myemail@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PostDTO } from './PostDTO';
import {
    PostDTOFromJSON,
    PostDTOFromJSONTyped,
    PostDTOToJSON,
    PostDTOToJSONTyped,
} from './PostDTO';

/**
 * DTO representing a page of Posts
 * @export
 * @interface PostPaginationDTO
 */
export interface PostPaginationDTO {
    /**
     * List of PostDTOs
     * @type {Array<PostDTO>}
     * @memberof PostPaginationDTO
     */
    list: Array<PostDTO>;
    /**
     * max elements
     * @type {number}
     * @memberof PostPaginationDTO
     */
    max: number;
}

/**
 * Check if a given object implements the PostPaginationDTO interface.
 */
export function instanceOfPostPaginationDTO(value: object): value is PostPaginationDTO {
    if (!('list' in value) || value['list'] === undefined) return false;
    if (!('max' in value) || value['max'] === undefined) return false;
    return true;
}

export function PostPaginationDTOFromJSON(json: any): PostPaginationDTO {
    return PostPaginationDTOFromJSONTyped(json, false);
}

export function PostPaginationDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostPaginationDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'list': ((json['list'] as Array<any>).map(PostDTOFromJSON)),
        'max': json['max'],
    };
}

export function PostPaginationDTOToJSON(json: any): PostPaginationDTO {
    return PostPaginationDTOToJSONTyped(json, false);
}

export function PostPaginationDTOToJSONTyped(value?: PostPaginationDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'list': ((value['list'] as Array<any>).map(PostDTOToJSON)),
        'max': value['max'],
    };
}

