/* tslint:disable */
/* eslint-disable */
/**
 * Tutorial Management API
 * This API exposes endpoints to manage tutorials.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: myemail@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * DTO representing an image and its associated metadata.
 * @export
 * @interface ImageDTO
 */
export interface ImageDTO {
    /**
     * Unique identifier of the image
     * @type {number}
     * @memberof ImageDTO
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof ImageDTO
     */
    image: string;
    /**
     * Username or ID of the image owner
     * @type {string}
     * @memberof ImageDTO
     */
    userOwner: string;
    /**
     * Visibility of the image
     * @type {string}
     * @memberof ImageDTO
     */
    visibility: ImageDTOVisibilityEnum;
    /**
     * ID of the group to which the image was posted
     * @type {number}
     * @memberof ImageDTO
     */
    groupId: number;
}


/**
 * @export
 */
export const ImageDTOVisibilityEnum = {
    Private: 'PRIVATE',
    Group: 'GROUP',
    FriendOnly: 'FRIEND_ONLY',
    Public: 'PUBLIC'
} as const;
export type ImageDTOVisibilityEnum = typeof ImageDTOVisibilityEnum[keyof typeof ImageDTOVisibilityEnum];


/**
 * Check if a given object implements the ImageDTO interface.
 */
export function instanceOfImageDTO(value: object): value is ImageDTO {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('image' in value) || value['image'] === undefined) return false;
    if (!('userOwner' in value) || value['userOwner'] === undefined) return false;
    if (!('visibility' in value) || value['visibility'] === undefined) return false;
    if (!('groupId' in value) || value['groupId'] === undefined) return false;
    return true;
}

export function ImageDTOFromJSON(json: any): ImageDTO {
    return ImageDTOFromJSONTyped(json, false);
}

export function ImageDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'image': json['image'],
        'userOwner': json['userOwner'],
        'visibility': json['visibility'],
        'groupId': json['groupId'],
    };
}

export function ImageDTOToJSON(json: any): ImageDTO {
    return ImageDTOToJSONTyped(json, false);
}

export function ImageDTOToJSONTyped(value?: ImageDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'image': value['image'],
        'userOwner': value['userOwner'],
        'visibility': value['visibility'],
        'groupId': value['groupId'],
    };
}

