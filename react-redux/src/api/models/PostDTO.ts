/* tslint:disable */
/* eslint-disable */
/**
 * Tutorial Management API
 * This API exposes endpoints to manage tutorials.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: myemail@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * DTO representing a post and its associated metadata.
 * @export
 * @interface PostDTO
 */
export interface PostDTO {
    /**
     * ID of the post
     * @type {number}
     * @memberof PostDTO
     */
    id: number;
    /**
     * Username of the user that published the post
     * @type {string}
     * @memberof PostDTO
     */
    user: string;
    /**
     * ID of the image in the post
     * @type {number}
     * @memberof PostDTO
     */
    image: number;
    /**
     * ID of the pipeline in the post
     * @type {number}
     * @memberof PostDTO
     */
    pipeline: number;
    /**
     * Caption added by the user
     * @type {string}
     * @memberof PostDTO
     */
    text: string;
    /**
     * Visibility of the post
     * @type {string}
     * @memberof PostDTO
     */
    visibility: PostDTOVisibilityEnum;
    /**
     * Post creation Timestamp (in epoch-seconds)
     * @type {Date}
     * @memberof PostDTO
     */
    createdAt?: Date;
}


/**
 * @export
 */
export const PostDTOVisibilityEnum = {
    Group: 'GROUP',
    FriendOnly: 'FRIEND_ONLY',
    Public: 'PUBLIC'
} as const;
export type PostDTOVisibilityEnum = typeof PostDTOVisibilityEnum[keyof typeof PostDTOVisibilityEnum];


/**
 * Check if a given object implements the PostDTO interface.
 */
export function instanceOfPostDTO(value: object): value is PostDTO {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('image' in value) || value['image'] === undefined) return false;
    if (!('pipeline' in value) || value['pipeline'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    if (!('visibility' in value) || value['visibility'] === undefined) return false;
    return true;
}

export function PostDTOFromJSON(json: any): PostDTO {
    return PostDTOFromJSONTyped(json, false);
}

export function PostDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'user': json['user'],
        'image': json['image'],
        'pipeline': json['pipeline'],
        'text': json['text'],
        'visibility': json['visibility'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
    };
}

export function PostDTOToJSON(json: any): PostDTO {
    return PostDTOToJSONTyped(json, false);
}

export function PostDTOToJSONTyped(value?: PostDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'user': value['user'],
        'image': value['image'],
        'pipeline': value['pipeline'],
        'text': value['text'],
        'visibility': value['visibility'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
    };
}

