/* tslint:disable */
/* eslint-disable */
/**
 * Tutorial Management API
 * This API exposes endpoints to manage tutorials.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: myemail@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * DTO representing an group.
 * @export
 * @interface GroupDTO
 */
export interface GroupDTO {
    /**
     * Unique identifier of the group
     * @type {number}
     * @memberof GroupDTO
     */
    id: number;
    /**
     * Group name
     * @type {string}
     * @memberof GroupDTO
     */
    name: string;
    /**
     * Username of the group owner
     * @type {string}
     * @memberof GroupDTO
     */
    owner: string;
    /**
     * Set of users who are members of the group.
     * @type {Set<string>}
     * @memberof GroupDTO
     */
    members: Set<string>;
}

/**
 * Check if a given object implements the GroupDTO interface.
 */
export function instanceOfGroupDTO(value: object): value is GroupDTO {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('owner' in value) || value['owner'] === undefined) return false;
    if (!('members' in value) || value['members'] === undefined) return false;
    return true;
}

export function GroupDTOFromJSON(json: any): GroupDTO {
    return GroupDTOFromJSONTyped(json, false);
}

export function GroupDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'owner': json['owner'],
        'members': new Set(json['members']),
    };
}

export function GroupDTOToJSON(json: any): GroupDTO {
    return GroupDTOToJSONTyped(json, false);
}

export function GroupDTOToJSONTyped(value?: GroupDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'owner': value['owner'],
        'members': Array.from(value['members'] as Set<any>),
    };
}

